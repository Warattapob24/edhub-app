"""Initial database schema

Revision ID: dff6a1bf7e9e
Revises: 
Create Date: 2025-08-14 17:07:50.146975

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dff6a1bf7e9e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('evaluation_topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_type', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['evaluation_topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('evaluation_topic', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_evaluation_topic_assessment_type'), ['assessment_type'], unique=False)

    op.create_table('grade_level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=True),
    sa.Column('label', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_role_key'), ['key'], unique=True)

    op.create_table('room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('room_type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('room', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_room_room_type'), ['room_type'], unique=False)

    op.create_table('school_period',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('period_number', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('school_period', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_school_period_period_number'), ['period_number'], unique=False)

    op.create_table('setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=True),
    sa.Column('value', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('setting', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_setting_key'), ['key'], unique=True)

    op.create_table('subject',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject_code', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('department', sa.String(length=120), nullable=True),
    sa.Column('default_credits', sa.Float(), nullable=True),
    sa.Column('subject_type', sa.String(length=50), nullable=True),
    sa.Column('time_preference', sa.String(length=50), nullable=True),
    sa.Column('required_room_type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('subject', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_subject_subject_code'), ['subject_code'], unique=True)

    op.create_table('timetable_block',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('days_of_week', sa.JSON(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('timetable_block', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_timetable_block_academic_year'), ['academic_year'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('full_name', sa.String(length=120), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('department', sa.String(length=120), nullable=True),
    sa.Column('max_periods_per_day', sa.Integer(), nullable=True),
    sa.Column('max_periods_per_week', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_department'), ['department'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('activity_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=120), nullable=True),
    sa.Column('details', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_activity_log_timestamp'), ['timestamp'], unique=False)

    op.create_table('class_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_number', sa.String(length=10), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('class_group', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_class_group_academic_year'), ['academic_year'], unique=False)

    op.create_table('curriculum',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('curriculum', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_curriculum_academic_year'), ['academic_year'], unique=False)
        batch_op.create_index(batch_op.f('ix_curriculum_semester'), ['semester'], unique=False)

    op.create_table('exam',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('hours', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('standards', sa.Text(), nullable=True),
    sa.Column('topics', sa.Text(), nullable=True),
    sa.Column('hours', sa.Integer(), nullable=True),
    sa.Column('k_score', sa.Integer(), nullable=True),
    sa.Column('p_score', sa.Integer(), nullable=True),
    sa.Column('a_score', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timetable_block_grade_levels',
    sa.Column('block_id', sa.Integer(), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['block_id'], ['timetable_block.id'], ),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.PrimaryKeyConstraint('block_id', 'grade_level_id')
    )
    op.create_table('timetable_block_roles',
    sa.Column('block_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['block_id'], ['timetable_block.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('block_id', 'role_id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('class_group_advisors',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('class_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_group_id'], ['class_group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'class_group_id')
    )
    op.create_table('course_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('class_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_group_id'], ['class_group.id'], ),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curriculum.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('curriculum_id', 'class_group_id', name='_curriculum_class_group_uc')
    )
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('prefix', sa.String(length=20), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('class_number', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('class_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_group_id'], ['class_group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_student_student_id'), ['student_id'], unique=True)

    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('class_group_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('assignment_id', sa.Integer(), nullable=True),
    sa.Column('coursework_ratio', sa.Integer(), nullable=True),
    sa.Column('final_exam_ratio', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['course_assignment.id'], ),
    sa.ForeignKeyConstraint(['class_group_id'], ['class_group.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_course_academic_year'), ['academic_year'], unique=False)
        batch_op.create_index(batch_op.f('ix_course_semester'), ['semester'], unique=False)
        batch_op.create_index(batch_op.f('ix_course_status'), ['status'], unique=False)

    op.create_table('final_evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('result', sa.String(length=50), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('advisor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['advisor_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['evaluation_topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('final_evaluation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_final_evaluation_academic_year'), ['academic_year'], unique=False)
        batch_op.create_index(batch_op.f('ix_final_evaluation_semester'), ['semester'], unique=False)

    op.create_table('additional_assessment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('result', sa.String(length=50), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['evaluation_topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('approval_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('step', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('approval_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_approval_log_timestamp'), ['timestamp'], unique=False)

    op.create_table('attendance_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('attendance_record', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_attendance_record_date'), ['date'], unique=False)

    op.create_table('course_class_groups',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('class_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_group_id'], ['class_group.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'class_group_id')
    )
    op.create_table('course_component',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('indicator', sa.Text(), nullable=True),
    sa.Column('component_type', sa.String(length=50), nullable=True),
    sa.Column('max_score_k', sa.Integer(), nullable=True),
    sa.Column('max_score_p', sa.Integer(), nullable=True),
    sa.Column('max_score_a', sa.Integer(), nullable=True),
    sa.Column('exam_type', sa.String(length=20), nullable=True),
    sa.Column('total_max_score', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrollments',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'course_id')
    )
    op.create_table('scheduling_rule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=50), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('scheduling_rule', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_scheduling_rule_rule_type'), ['rule_type'], unique=False)

    op.create_table('timetable_slot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('block_id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('class_group_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['block_id'], ['timetable_block.id'], ),
    sa.ForeignKeyConstraint(['class_group_id'], ['class_group.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['school_period.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('points_k', sa.Float(), nullable=True),
    sa.Column('points_p', sa.Float(), nullable=True),
    sa.Column('points_a', sa.Float(), nullable=True),
    sa.Column('total_points', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('remedial_score', sa.Float(), nullable=True),
    sa.Column('exam_points', sa.Float(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('component_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['course_component.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('score')
    op.drop_table('timetable_slot')
    with op.batch_alter_table('scheduling_rule', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_scheduling_rule_rule_type'))

    op.drop_table('scheduling_rule')
    op.drop_table('enrollments')
    op.drop_table('course_component')
    op.drop_table('course_class_groups')
    with op.batch_alter_table('attendance_record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_attendance_record_date'))

    op.drop_table('attendance_record')
    with op.batch_alter_table('approval_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_approval_log_timestamp'))

    op.drop_table('approval_log')
    op.drop_table('additional_assessment')
    with op.batch_alter_table('final_evaluation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_final_evaluation_semester'))
        batch_op.drop_index(batch_op.f('ix_final_evaluation_academic_year'))

    op.drop_table('final_evaluation')
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_course_status'))
        batch_op.drop_index(batch_op.f('ix_course_semester'))
        batch_op.drop_index(batch_op.f('ix_course_academic_year'))

    op.drop_table('course')
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_student_student_id'))

    op.drop_table('student')
    op.drop_table('course_assignment')
    op.drop_table('class_group_advisors')
    op.drop_table('user_roles')
    op.drop_table('timetable_block_roles')
    op.drop_table('timetable_block_grade_levels')
    op.drop_table('learning_unit')
    op.drop_table('exam')
    with op.batch_alter_table('curriculum', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_curriculum_semester'))
        batch_op.drop_index(batch_op.f('ix_curriculum_academic_year'))

    op.drop_table('curriculum')
    with op.batch_alter_table('class_group', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_class_group_academic_year'))

    op.drop_table('class_group')
    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activity_log_timestamp'))

    op.drop_table('activity_log')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_department'))

    op.drop_table('user')
    with op.batch_alter_table('timetable_block', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_timetable_block_academic_year'))

    op.drop_table('timetable_block')
    with op.batch_alter_table('subject', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subject_subject_code'))

    op.drop_table('subject')
    with op.batch_alter_table('setting', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_setting_key'))

    op.drop_table('setting')
    with op.batch_alter_table('school_period', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_school_period_period_number'))

    op.drop_table('school_period')
    with op.batch_alter_table('room', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_room_room_type'))

    op.drop_table('room')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_role_key'))

    op.drop_table('role')
    op.drop_table('grade_level')
    with op.batch_alter_table('evaluation_topic', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_evaluation_topic_assessment_type'))

    op.drop_table('evaluation_topic')
    # ### end Alembic commands ###
