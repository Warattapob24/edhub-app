"""Initial tables

Revision ID: 34a2a4810f0b
Revises: 
Create Date: 2025-08-25 22:31:40.021067

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '34a2a4810f0b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academic_year',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_dimension',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('assessment_method',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('competency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('indicators', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('desirable_characteristic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('indicators', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('grade_level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('learning_area',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('head_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['head_id'], ['user.id'], name='fk_learning_area_head_id', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('physical_room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('reading_analysis_writing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('sub_categories', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('characteristic_sub_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['desirable_characteristic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classroom',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('competency_sub_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['competency.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_code', sa.String(length=20), nullable=False),
    sa.Column('name_thai', sa.String(length=200), nullable=False),
    sa.Column('credits', sa.Float(), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=False),
    sa.Column('learning_area_id', sa.Integer(), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.Column('periods_per_week', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.ForeignKeyConstraint(['learning_area_id'], ['learning_area.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_code')
    )
    op.create_table('method_sub_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['assessment_method.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('full_name', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('learning_area_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['learning_area_id'], ['learning_area.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('assessment_tool',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('tool_type', sa.String(length=50), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classroom_advisors',
    sa.Column('classroom_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('classroom_id', 'user_id')
    )
    op.create_table('course_section',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('academic_year_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('periods_per_week', sa.Integer(), nullable=True),
    sa.Column('prefer_consecutive', sa.Boolean(), nullable=True),
    sa.Column('prefer_time', sa.String(length=20), nullable=True),
    sa.Column('main_physical_room_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['academic_year_id'], ['academic_year.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['main_physical_room_id'], ['physical_room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrollment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('classroom_id', sa.Integer(), nullable=False),
    sa.Column('academic_year_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['academic_year_id'], ['academic_year.id'], ),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('homeroom_enrollment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('classroom_id', sa.Integer(), nullable=False),
    sa.Column('academic_year_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['academic_year_id'], ['academic_year.id'], ),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('checklist_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tool_id'], ['assessment_tool.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_period', sa.Integer(), nullable=True),
    sa.Column('end_period', sa.Integer(), nullable=True),
    sa.Column('learning_standard', sa.Text(), nullable=True),
    sa.Column('indicators', sa.Text(), nullable=True),
    sa.Column('learning_objectives', sa.Text(), nullable=True),
    sa.Column('core_concepts', sa.Text(), nullable=True),
    sa.Column('learning_content', sa.Text(), nullable=True),
    sa.Column('activities', sa.Text(), nullable=True),
    sa.Column('media_sources', sa.Text(), nullable=True),
    sa.Column('course_section_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_section_id'], ['course_section.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rubric_criterion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tool_id'], ['assessment_tool.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('section_classrooms',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('classroom_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['course_section.id'], ),
    sa.PrimaryKeyConstraint('section_id', 'classroom_id')
    )
    op.create_table('section_enrollments',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['course_section.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'section_id')
    )
    op.create_table('section_teachers',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['course_section.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('section_id', 'user_id')
    )
    op.create_table('teacher_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_section_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('classroom_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['course_section_id'], ['course_section.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tool_criterion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('max_score', sa.Float(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tool_id'], ['assessment_tool.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade_component',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('total_max_score', sa.Float(), nullable=False),
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('is_midway_indicator', sa.Boolean(), nullable=False),
    sa.Column('is_critical_indicator', sa.Boolean(), nullable=False),
    sa.Column('is_midterm_exam', sa.Boolean(), nullable=False),
    sa.Column('is_final_exam', sa.Boolean(), nullable=False),
    sa.Column('assessment_tool_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_tool_id'], ['assessment_tool.id'], ),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit_assessment_methods',
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('method_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.ForeignKeyConstraint(['method_id'], ['assessment_method.id'], ),
    sa.PrimaryKeyConstraint('learning_unit_id', 'method_id')
    )
    op.create_table('unit_assessment_methods_sub_items',
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('sub_item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.ForeignKeyConstraint(['sub_item_id'], ['method_sub_item.id'], ),
    sa.PrimaryKeyConstraint('learning_unit_id', 'sub_item_id')
    )
    op.create_table('unit_characteristic_sub_items',
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('sub_item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.ForeignKeyConstraint(['sub_item_id'], ['characteristic_sub_item.id'], ),
    sa.PrimaryKeyConstraint('learning_unit_id', 'sub_item_id')
    )
    op.create_table('unit_characteristics',
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('characteristic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['characteristic_id'], ['desirable_characteristic.id'], ),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.PrimaryKeyConstraint('learning_unit_id', 'characteristic_id')
    )
    op.create_table('unit_competencies',
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('competency_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competency.id'], ),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.PrimaryKeyConstraint('learning_unit_id', 'competency_id')
    )
    op.create_table('unit_competency_sub_items',
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('sub_item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.ForeignKeyConstraint(['sub_item_id'], ['competency_sub_item.id'], ),
    sa.PrimaryKeyConstraint('learning_unit_id', 'sub_item_id')
    )
    op.create_table('assessment_aspect',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('max_score', sa.Float(), nullable=False),
    sa.Column('grade_component_id', sa.Integer(), nullable=False),
    sa.Column('dimension_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dimension_id'], ['assessment_dimension.id'], ),
    sa.ForeignKeyConstraint(['grade_component_id'], ['grade_component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_grade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('assessment_aspect_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_aspect_id'], ['assessment_aspect.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_grade')
    op.drop_table('assessment_aspect')
    op.drop_table('unit_competency_sub_items')
    op.drop_table('unit_competencies')
    op.drop_table('unit_characteristics')
    op.drop_table('unit_characteristic_sub_items')
    op.drop_table('unit_assessment_methods_sub_items')
    op.drop_table('unit_assessment_methods')
    op.drop_table('grade_component')
    op.drop_table('tool_criterion')
    op.drop_table('teacher_assignment')
    op.drop_table('section_teachers')
    op.drop_table('section_enrollments')
    op.drop_table('section_classrooms')
    op.drop_table('rubric_criterion')
    op.drop_table('learning_unit')
    op.drop_table('checklist_item')
    op.drop_table('user_roles')
    op.drop_table('homeroom_enrollment')
    op.drop_table('enrollment')
    op.drop_table('course_section')
    op.drop_table('classroom_advisors')
    op.drop_table('assessment_tool')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    op.drop_table('method_sub_item')
    op.drop_table('course')
    op.drop_table('competency_sub_item')
    op.drop_table('classroom')
    op.drop_table('characteristic_sub_item')
    op.drop_table('role')
    op.drop_table('reading_analysis_writing')
    op.drop_table('physical_room')
    op.drop_table('learning_area')
    op.drop_table('grade_level')
    op.drop_table('desirable_characteristic')
    op.drop_table('competency')
    op.drop_table('assessment_method')
    op.drop_table('assessment_dimension')
    op.drop_table('academic_year')
    # ### end Alembic commands ###
