"""Add explicit names to Classroom AND Curriculum FKs

Revision ID: 7a57f17885e0
Revises: a0507f182cdf
Create Date: 2025-11-01 16:08:00.905260

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7a57f17885e0'
down_revision = 'a0507f182cdf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_administrative_department')
    with op.batch_alter_table('administrative_department', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_admin_dept_vice_role', 'role', ['vice_role_id'], ['id'])
        batch_op.create_foreign_key('fk_admin_dept_member_role', 'role', ['member_role_id'], ['id'])
        batch_op.create_foreign_key('fk_admin_dept_head_role', 'role', ['head_role_id'], ['id'])

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.alter_column('record_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=True)

    with op.batch_alter_table('classroom', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_classroom_program_id'), ['program_id'], unique=False)
        batch_op.create_foreign_key('fk_classroom_program', 'program', ['program_id'], ['id'])
        batch_op.create_foreign_key('fk_classroom_room', 'room', ['room_id'], ['id'])

    with op.batch_alter_table('curriculum', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('_semester_grade_subject_uc'), type_='unique')
        batch_op.create_unique_constraint('_semester_grade_program_subject_uc', ['semester_id', 'grade_level_id', 'program_id', 'subject_id'])
        batch_op.create_foreign_key('fk_curriculum_program', 'program', ['program_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('curriculum', schema=None) as batch_op:
        batch_op.drop_constraint('fk_curriculum_program', type_='foreignkey')
        batch_op.drop_constraint('_semester_grade_program_subject_uc', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('_semester_grade_subject_uc'), ['semester_id', 'grade_level_id', 'subject_id'])

    with op.batch_alter_table('classroom', schema=None) as batch_op:
        batch_op.drop_constraint('fk_classroom_room', type_='foreignkey')
        batch_op.drop_constraint('fk_classroom_program', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_classroom_program_id'))

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.alter_column('record_id',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('administrative_department', schema=None) as batch_op:
        batch_op.drop_constraint('fk_admin_dept_head_role', type_='foreignkey')
        batch_op.drop_constraint('fk_admin_dept_member_role', type_='foreignkey')
        batch_op.drop_constraint('fk_admin_dept_vice_role', type_='foreignkey')

    op.create_table('_alembic_tmp_administrative_department',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=False),
    sa.Column('head_id', sa.INTEGER(), nullable=True),
    sa.Column('vice_director_id', sa.INTEGER(), nullable=True),
    sa.Column('head_role_id', sa.INTEGER(), nullable=True),
    sa.Column('vice_role_id', sa.INTEGER(), nullable=True),
    sa.Column('member_role_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['head_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['head_role_id'], ['role.id'], name=op.f('fk_admin_dept_head_role')),
    sa.ForeignKeyConstraint(['member_role_id'], ['role.id'], name=op.f('fk_admin_dept_member_role')),
    sa.ForeignKeyConstraint(['vice_director_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vice_role_id'], ['role.id'], name=op.f('fk_admin_dept_vice_role')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    # ### end Alembic commands ###
