"""Add RepeatCandidate table for promotion workflow

Revision ID: d1a8f34cd452
Revises: fe69ee659143
Create Date: 2025-10-23 23:11:43.887585

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd1a8f34cd452'
down_revision = 'fe69ee659143'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repeat_candidate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('previous_enrollment_id', sa.Integer(), nullable=False),
    sa.Column('academic_year_id_failed', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('advisor_notes', sa.Text(), nullable=True),
    sa.Column('grade_head_notes', sa.Text(), nullable=True),
    sa.Column('academic_notes', sa.Text(), nullable=True),
    sa.Column('director_notes', sa.Text(), nullable=True),
    sa.Column('final_decision', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['academic_year_id_failed'], ['academic_year.id'], ),
    sa.ForeignKeyConstraint(['previous_enrollment_id'], ['enrollment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'academic_year_id_failed', name='_student_year_repeat_uc')
    )
    with op.batch_alter_table('repeat_candidate', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_repeat_candidate_academic_year_id_failed'), ['academic_year_id_failed'], unique=False)
        batch_op.create_index(batch_op.f('ix_repeat_candidate_final_decision'), ['final_decision'], unique=False)
        batch_op.create_index(batch_op.f('ix_repeat_candidate_previous_enrollment_id'), ['previous_enrollment_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_repeat_candidate_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_repeat_candidate_student_id'), ['student_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('repeat_candidate', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_student_id'))
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_status'))
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_previous_enrollment_id'))
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_final_decision'))
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_academic_year_id_failed'))

    op.drop_table('repeat_candidate')
    # ### end Alembic commands ###
