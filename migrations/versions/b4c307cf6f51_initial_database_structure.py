"""Initial database structure

Revision ID: b4c307cf6f51
Revises: 
Create Date: 2025-10-27 09:54:15.544285

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b4c307cf6f51'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academic_year',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('year')
    )
    op.create_table('assessment_dimension',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('assessment_dimension', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_assessment_dimension_code'), ['code'], unique=True)

    op.create_table('assessment_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('room_type', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('school_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=False),
    sa.Column('is_all_day', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('subject_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('name_prefix', sa.String(length=20), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('job_title', sa.String(length=100), nullable=True),
    sa.Column('must_change_username', sa.Boolean(), nullable=False),
    sa.Column('must_change_password', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('administrative_department',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('head_id', sa.Integer(), nullable=True),
    sa.Column('vice_director_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['head_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vice_director_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('assessment_topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['assessment_topic.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['assessment_template.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('model_name', sa.String(length=50), nullable=True),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade_level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('short_name', sa.String(length=10), nullable=True),
    sa.Column('level_group', sa.String(length=10), nullable=True),
    sa.Column('head_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['head_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('grade_level', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_grade_level_level_group'), ['level_group'], unique=False)

    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_notification_type'), ['notification_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_user_id'), ['user_id'], unique=False)

    op.create_table('rubric_level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['assessment_template.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('semester',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('academic_year_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['academic_year_id'], ['academic_year.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('semester', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_semester_is_current'), ['is_current'], unique=False)

    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.String(length=20), nullable=False),
    sa.Column('name_prefix', sa.String(length=20), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_student_student_id'), ['student_id'], unique=True)

    op.create_table('subject_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('head_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['head_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('admin_department_members',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['administrative_department.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'department_id')
    )
    op.create_table('advisor_assessment_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('semester_id', sa.Integer(), nullable=False),
    sa.Column('advisor_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['advisor_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'semester_id', name='_student_semester_advisor_assessment_uc')
    )
    with op.batch_alter_table('advisor_assessment_record', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_advisor_assessment_record_advisor_id'), ['advisor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_advisor_assessment_record_semester_id'), ['semester_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_advisor_assessment_record_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_advisor_assessment_record_student_id'), ['student_id'], unique=False)

    op.create_table('classroom',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.Column('academic_year_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['academic_year_id'], ['academic_year.id'], ),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_strand',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('subject_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_group_id'], ['subject_group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('school_event_grades',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['school_event.id'], ),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'grade_level_id')
    )
    op.create_table('subject',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject_code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('credit', sa.Float(), nullable=False),
    sa.Column('subject_group_id', sa.Integer(), nullable=False),
    sa.Column('subject_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_group_id'], ['subject_group.id'], ),
    sa.ForeignKeyConstraint(['subject_type_id'], ['subject_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('subject', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_subject_subject_code'), ['subject_code'], unique=True)

    op.create_table('subject_group_members',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_group_id'], ['subject_group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'subject_group_id')
    )
    op.create_table('time_slot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('semester_id', sa.Integer(), nullable=False),
    sa.Column('period_number', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('activity_name', sa.String(length=100), nullable=True),
    sa.Column('is_teaching_period', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('time_slot', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_time_slot_semester_id'), ['semester_id'], unique=False)

    op.create_table('weekly_schedule_slot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('semester_id', sa.Integer(), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('period_number', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('activity_name', sa.String(length=100), nullable=True),
    sa.Column('is_teaching_period', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('semester_id', 'grade_level_id', 'day_of_week', 'period_number', name='_unique_slot_for_grade')
    )
    with op.batch_alter_table('weekly_schedule_slot', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_weekly_schedule_slot_grade_level_id'), ['grade_level_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_weekly_schedule_slot_semester_id'), ['semester_id'], unique=False)

    op.create_table('advisor_assessment_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('score_value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['record_id'], ['advisor_assessment_record.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['assessment_topic.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('record_id', 'topic_id', name='_record_topic_advisor_score_uc')
    )
    with op.batch_alter_table('advisor_assessment_score', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_advisor_assessment_score_record_id'), ['record_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_advisor_assessment_score_topic_id'), ['topic_id'], unique=False)

    op.create_table('classroom_advisors',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('classroom_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'classroom_id')
    )
    op.create_table('curriculum',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('semester_id', sa.Integer(), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('semester_id', 'grade_level_id', 'subject_id', name='_semester_grade_subject_uc')
    )
    op.create_table('lesson_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('academic_year_id', sa.Integer(), nullable=False),
    sa.Column('target_mid_ratio', sa.Integer(), nullable=True),
    sa.Column('target_final_ratio', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('revision_notes', sa.Text(), nullable=True),
    sa.Column('manual_scheduling_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['academic_year_id'], ['academic_year.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subject_id', 'academic_year_id', name='_subject_year_uc')
    )
    with op.batch_alter_table('lesson_plan', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lesson_plan_status'), ['status'], unique=False)

    op.create_table('standard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('learning_strand_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['learning_strand_id'], ['learning_strand.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code', 'learning_strand_id', name='_code_strand_uc')
    )
    with op.batch_alter_table('standard', schema=None) as batch_op:
        batch_op.create_index('ix_standard_code', ['code'], unique=False)

    op.create_table('subject_grade_levels',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('subject_id', 'grade_level_id')
    )
    op.create_table('weekly_schedule_slot_grades',
    sa.Column('slot_id', sa.Integer(), nullable=False),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_level.id'], ),
    sa.ForeignKeyConstraint(['slot_id'], ['weekly_schedule_slot.id'], ),
    sa.PrimaryKeyConstraint('slot_id', 'grade_level_id')
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('classroom_id', sa.Integer(), nullable=False),
    sa.Column('semester_id', sa.Integer(), nullable=False),
    sa.Column('lesson_plan_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('grade_submission_status', sa.String(length=50), nullable=False),
    sa.Column('grade_submission_notes', sa.Text(), nullable=True),
    sa.Column('submitted_by_id', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['lesson_plan_id'], ['lesson_plan.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['submitted_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['submitted_by_id'], ['user.id'], name='fk_course_submitted_by_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subject_id', 'classroom_id', 'semester_id', name='_subject_classroom_semester_uc')
    )
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_course_grade_submission_status'), ['grade_submission_status'], unique=False)

    op.create_table('indicator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('creator_type', sa.String(length=20), nullable=False),
    sa.Column('standard_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('lesson_plan_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['lesson_plan_id'], ['lesson_plan.id'], ),
    sa.ForeignKeyConstraint(['standard_id'], ['standard.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('indicator', schema=None) as batch_op:
        batch_op.create_index('ix_indicator_code', ['code'], unique=False)
        batch_op.create_index('ix_indicator_creator_type', ['creator_type'], unique=False)

    op.create_table('learning_unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_plan_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('sequence', sa.Integer(), nullable=True),
    sa.Column('midterm_score', sa.Float(), nullable=True),
    sa.Column('final_score', sa.Float(), nullable=True),
    sa.Column('topic', sa.String(length=255), nullable=True),
    sa.Column('hours', sa.Integer(), nullable=True),
    sa.Column('target_mid_ratio', sa.Integer(), nullable=True),
    sa.Column('target_final_ratio', sa.Integer(), nullable=True),
    sa.Column('learning_objectives', sa.Text(), nullable=True),
    sa.Column('learning_content', sa.Text(), nullable=True),
    sa.Column('learning_activities', sa.Text(), nullable=True),
    sa.Column('core_concepts', sa.Text(), nullable=True),
    sa.Column('activities', sa.Text(), nullable=True),
    sa.Column('media_sources', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_plan_id'], ['lesson_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lesson_plan_constraint',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_plan_id', sa.Integer(), nullable=False),
    sa.Column('constraint_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['lesson_plan_id'], ['lesson_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lesson_plan_constraint', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lesson_plan_constraint_lesson_plan_id'), ['lesson_plan_id'], unique=False)

    op.create_table('assessment_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('assessment_topic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_topic_id'], ['assessment_topic.id'], ),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendance_warning',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('threshold_percent', sa.Integer(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(), nullable=True),
    sa.Column('absence_count_at_trigger', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'course_id', 'threshold_percent', name='_student_course_threshold_uc')
    )
    with op.batch_alter_table('attendance_warning', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_attendance_warning_course_id'), ['course_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendance_warning_student_id'), ['student_id'], unique=False)

    op.create_table('course_grade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('midterm_score', sa.Float(), nullable=True),
    sa.Column('final_score', sa.Float(), nullable=True),
    sa.Column('midterm_remediated_score', sa.Float(), nullable=True),
    sa.Column('final_grade', sa.String(length=10), nullable=True),
    sa.Column('remediation_status', sa.String(length=50), nullable=False),
    sa.Column('original_final_grade', sa.String(length=10), nullable=True),
    sa.Column('remediated_at', sa.DateTime(), nullable=True),
    sa.Column('ms_remediated_status', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'course_id', name='_student_course_grade_uc')
    )
    with op.batch_alter_table('course_grade', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_course_grade_course_id'), ['course_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_course_grade_final_grade'), ['final_grade'], unique=False)
        batch_op.create_index(batch_op.f('ix_course_grade_student_id'), ['student_id'], unique=False)

    op.create_table('course_teachers',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'user_id')
    )
    op.create_table('graded_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('max_score', sa.Float(), nullable=False),
    sa.Column('indicator_type', sa.String(length=50), nullable=False),
    sa.Column('assessment_type', sa.String(length=50), server_default='ปลายภาค', nullable=False),
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('assessment_dimension_id', sa.Integer(), nullable=False),
    sa.Column('is_group_assignment', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_dimension_id'], ['assessment_dimension.id'], ),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_unit_indicators',
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('indicator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicator.id'], ),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.PrimaryKeyConstraint('learning_unit_id', 'indicator_id')
    )
    op.create_table('lesson_reflection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_teaching_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_content', sa.Text(), nullable=False),
    sa.Column('problems_obstacles', sa.Text(), nullable=True),
    sa.Column('solutions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('classroom_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('learning_unit_id', 'teacher_id', 'classroom_id', name='_unit_teacher_classroom_uc')
    )
    with op.batch_alter_table('post_teaching_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_post_teaching_log_classroom_id'), ['classroom_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_teaching_log_learning_unit_id'), ['learning_unit_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_teaching_log_teacher_id'), ['teacher_id'], unique=False)

    op.create_table('qualitative_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score_value', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('assessment_topic_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_topic_id'], ['assessment_topic.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'assessment_topic_id', 'course_id', name='_student_topic_course_uc')
    )
    with op.batch_alter_table('qualitative_score', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_qualitative_score_assessment_topic_id'), ['assessment_topic_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_qualitative_score_course_id'), ['course_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_qualitative_score_student_id'), ['student_id'], unique=False)

    op.create_table('student_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('lesson_plan_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['lesson_plan_id'], ['lesson_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('student_group', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_student_group_course_id'), ['course_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_group_creator_id'), ['creator_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_group_lesson_plan_id'), ['lesson_plan_id'], unique=False)

    op.create_table('sub_unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('hour_sequence', sa.Integer(), nullable=False),
    sa.Column('activities', sa.Text(), nullable=True),
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timetable_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('weekly_schedule_slot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['weekly_schedule_slot_id'], ['weekly_schedule_slot.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('weekly_schedule_slot_id', name='_slot_uc')
    )
    op.create_table('unit_indicators',
    sa.Column('learning_unit_id', sa.Integer(), nullable=False),
    sa.Column('indicator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicator.id'], ),
    sa.ForeignKeyConstraint(['learning_unit_id'], ['learning_unit.id'], ),
    sa.PrimaryKeyConstraint('learning_unit_id', 'indicator_id')
    )
    op.create_table('attendance_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.Column('attendance_date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('timetable_entry_id', sa.Integer(), nullable=False),
    sa.Column('recorder_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recorder_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['timetable_entry_id'], ['timetable_entry.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'timetable_entry_id', 'attendance_date', name='_student_entry_date_uc')
    )
    with op.batch_alter_table('attendance_record', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_attendance_record_attendance_date'), ['attendance_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendance_record_student_id'), ['student_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendance_record_timetable_entry_id'), ['timetable_entry_id'], unique=False)

    op.create_table('enrollment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('classroom_id', sa.Integer(), nullable=False),
    sa.Column('roll_number', sa.Integer(), nullable=True),
    sa.Column('alerts', sa.JSON(), nullable=True),
    sa.Column('student_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['student_group_id'], ['student_group.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('student_group_id', sa.Integer(), nullable=False),
    sa.Column('graded_item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['graded_item_id'], ['graded_item.id'], ),
    sa.ForeignKeyConstraint(['student_group_id'], ['student_group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_group_id', 'graded_item_id', name='_group_item_uc')
    )
    op.create_table('score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('assessment_item_id', sa.Integer(), nullable=True),
    sa.Column('rubric_level_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('graded_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_item_id'], ['assessment_item.id'], ),
    sa.ForeignKeyConstraint(['graded_item_id'], ['graded_item.id'], ),
    sa.ForeignKeyConstraint(['rubric_level_id'], ['rubric_level.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sub_unit_assessment_items',
    sa.Column('sub_unit_id', sa.Integer(), nullable=False),
    sa.Column('assessment_item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_item_id'], ['assessment_item.id'], ),
    sa.ForeignKeyConstraint(['sub_unit_id'], ['sub_unit.id'], ),
    sa.PrimaryKeyConstraint('sub_unit_id', 'assessment_item_id')
    )
    op.create_table('sub_unit_graded_items',
    sa.Column('sub_unit_id', sa.Integer(), nullable=False),
    sa.Column('graded_item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['graded_item_id'], ['graded_item.id'], ),
    sa.ForeignKeyConstraint(['sub_unit_id'], ['sub_unit.id'], ),
    sa.PrimaryKeyConstraint('sub_unit_id', 'graded_item_id')
    )
    op.create_table('sub_unit_indicators',
    sa.Column('sub_unit_id', sa.Integer(), nullable=False),
    sa.Column('indicator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicator.id'], ),
    sa.ForeignKeyConstraint(['sub_unit_id'], ['sub_unit.id'], ),
    sa.PrimaryKeyConstraint('sub_unit_id', 'indicator_id')
    )
    op.create_table('repeat_candidate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('previous_enrollment_id', sa.Integer(), nullable=False),
    sa.Column('academic_year_id_failed', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('advisor_notes', sa.Text(), nullable=True),
    sa.Column('grade_head_notes', sa.Text(), nullable=True),
    sa.Column('academic_notes', sa.Text(), nullable=True),
    sa.Column('director_notes', sa.Text(), nullable=True),
    sa.Column('final_decision', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['academic_year_id_failed'], ['academic_year.id'], ),
    sa.ForeignKeyConstraint(['previous_enrollment_id'], ['enrollment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'academic_year_id_failed', name='_student_year_repeat_uc')
    )
    with op.batch_alter_table('repeat_candidate', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_repeat_candidate_academic_year_id_failed'), ['academic_year_id_failed'], unique=False)
        batch_op.create_index(batch_op.f('ix_repeat_candidate_final_decision'), ['final_decision'], unique=False)
        batch_op.create_index(batch_op.f('ix_repeat_candidate_previous_enrollment_id'), ['previous_enrollment_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_repeat_candidate_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_repeat_candidate_student_id'), ['student_id'], unique=False)

    op.create_table('student_group_members',
    sa.Column('enrollment_id', sa.Integer(), nullable=False),
    sa.Column('student_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['enrollment_id'], ['enrollment.id'], ),
    sa.ForeignKeyConstraint(['student_group_id'], ['student_group.id'], ),
    sa.PrimaryKeyConstraint('enrollment_id', 'student_group_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_group_members')
    with op.batch_alter_table('repeat_candidate', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_student_id'))
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_status'))
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_previous_enrollment_id'))
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_final_decision'))
        batch_op.drop_index(batch_op.f('ix_repeat_candidate_academic_year_id_failed'))

    op.drop_table('repeat_candidate')
    op.drop_table('sub_unit_indicators')
    op.drop_table('sub_unit_graded_items')
    op.drop_table('sub_unit_assessment_items')
    op.drop_table('score')
    op.drop_table('group_score')
    op.drop_table('enrollment')
    with op.batch_alter_table('attendance_record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_attendance_record_timetable_entry_id'))
        batch_op.drop_index(batch_op.f('ix_attendance_record_student_id'))
        batch_op.drop_index(batch_op.f('ix_attendance_record_attendance_date'))

    op.drop_table('attendance_record')
    op.drop_table('unit_indicators')
    op.drop_table('timetable_entry')
    op.drop_table('sub_unit')
    with op.batch_alter_table('student_group', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_student_group_lesson_plan_id'))
        batch_op.drop_index(batch_op.f('ix_student_group_creator_id'))
        batch_op.drop_index(batch_op.f('ix_student_group_course_id'))

    op.drop_table('student_group')
    with op.batch_alter_table('qualitative_score', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_qualitative_score_student_id'))
        batch_op.drop_index(batch_op.f('ix_qualitative_score_course_id'))
        batch_op.drop_index(batch_op.f('ix_qualitative_score_assessment_topic_id'))

    op.drop_table('qualitative_score')
    with op.batch_alter_table('post_teaching_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_teaching_log_teacher_id'))
        batch_op.drop_index(batch_op.f('ix_post_teaching_log_learning_unit_id'))
        batch_op.drop_index(batch_op.f('ix_post_teaching_log_classroom_id'))

    op.drop_table('post_teaching_log')
    op.drop_table('lesson_reflection')
    op.drop_table('learning_unit_indicators')
    op.drop_table('graded_item')
    op.drop_table('course_teachers')
    with op.batch_alter_table('course_grade', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_course_grade_student_id'))
        batch_op.drop_index(batch_op.f('ix_course_grade_final_grade'))
        batch_op.drop_index(batch_op.f('ix_course_grade_course_id'))

    op.drop_table('course_grade')
    with op.batch_alter_table('attendance_warning', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_attendance_warning_student_id'))
        batch_op.drop_index(batch_op.f('ix_attendance_warning_course_id'))

    op.drop_table('attendance_warning')
    op.drop_table('assessment_item')
    with op.batch_alter_table('lesson_plan_constraint', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lesson_plan_constraint_lesson_plan_id'))

    op.drop_table('lesson_plan_constraint')
    op.drop_table('learning_unit')
    with op.batch_alter_table('indicator', schema=None) as batch_op:
        batch_op.drop_index('ix_indicator_creator_type')
        batch_op.drop_index('ix_indicator_code')

    op.drop_table('indicator')
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_course_grade_submission_status'))

    op.drop_table('course')
    op.drop_table('weekly_schedule_slot_grades')
    op.drop_table('subject_grade_levels')
    with op.batch_alter_table('standard', schema=None) as batch_op:
        batch_op.drop_index('ix_standard_code')

    op.drop_table('standard')
    with op.batch_alter_table('lesson_plan', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lesson_plan_status'))

    op.drop_table('lesson_plan')
    op.drop_table('curriculum')
    op.drop_table('classroom_advisors')
    with op.batch_alter_table('advisor_assessment_score', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_advisor_assessment_score_topic_id'))
        batch_op.drop_index(batch_op.f('ix_advisor_assessment_score_record_id'))

    op.drop_table('advisor_assessment_score')
    with op.batch_alter_table('weekly_schedule_slot', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_weekly_schedule_slot_semester_id'))
        batch_op.drop_index(batch_op.f('ix_weekly_schedule_slot_grade_level_id'))

    op.drop_table('weekly_schedule_slot')
    with op.batch_alter_table('time_slot', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_time_slot_semester_id'))

    op.drop_table('time_slot')
    op.drop_table('subject_group_members')
    with op.batch_alter_table('subject', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subject_subject_code'))

    op.drop_table('subject')
    op.drop_table('school_event_grades')
    op.drop_table('learning_strand')
    op.drop_table('classroom')
    with op.batch_alter_table('advisor_assessment_record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_advisor_assessment_record_student_id'))
        batch_op.drop_index(batch_op.f('ix_advisor_assessment_record_status'))
        batch_op.drop_index(batch_op.f('ix_advisor_assessment_record_semester_id'))
        batch_op.drop_index(batch_op.f('ix_advisor_assessment_record_advisor_id'))

    op.drop_table('advisor_assessment_record')
    op.drop_table('admin_department_members')
    op.drop_table('user_roles')
    op.drop_table('subject_group')
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_student_student_id'))

    op.drop_table('student')
    with op.batch_alter_table('semester', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_semester_is_current'))

    op.drop_table('semester')
    op.drop_table('rubric_level')
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_user_id'))
        batch_op.drop_index(batch_op.f('ix_notification_notification_type'))
        batch_op.drop_index(batch_op.f('ix_notification_is_read'))

    op.drop_table('notification')
    with op.batch_alter_table('grade_level', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_grade_level_level_group'))

    op.drop_table('grade_level')
    op.drop_table('audit_log')
    op.drop_table('assessment_topic')
    op.drop_table('administrative_department')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('subject_type')
    op.drop_table('setting')
    op.drop_table('school_event')
    op.drop_table('room')
    op.drop_table('role')
    op.drop_table('assessment_template')
    with op.batch_alter_table('assessment_dimension', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_assessment_dimension_code'))

    op.drop_table('assessment_dimension')
    op.drop_table('academic_year')
    # ### end Alembic commands ###
